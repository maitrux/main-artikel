[{"/Users/maitrux/main-artikel-app/Client/src/index.js":"1","/Users/maitrux/main-artikel-app/Client/src/components/App.js":"2","/Users/maitrux/main-artikel-app/Client/src/components/ArticleForm.js":"3","/Users/maitrux/main-artikel-app/client/src/index.js":"4","/Users/maitrux/main-artikel-app/client/src/components/App.js":"5","/Users/maitrux/main-artikel-app/client/src/components/ArticleForm.js":"6","/Users/maitrux/main-artikel-app/client/src/components/GuessArticle.js":"7"},{"size":230,"mtime":1643398774137,"results":"8","hashOfConfig":"9"},{"size":1001,"mtime":1643304867585,"results":"10","hashOfConfig":"9"},{"size":2835,"mtime":1643391577448,"results":"11","hashOfConfig":"9"},{"size":230,"mtime":1643398774137,"results":"12","hashOfConfig":"13"},{"size":1955,"mtime":1643493050380,"results":"14","hashOfConfig":"13"},{"size":2811,"mtime":1643490436967,"results":"15","hashOfConfig":"13"},{"size":2434,"mtime":1643493374233,"results":"16","hashOfConfig":"13"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gq871v",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1am14i9",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/maitrux/main-artikel-app/Client/src/index.js",[],"/Users/maitrux/main-artikel-app/Client/src/components/App.js",["34"],"/Users/maitrux/main-artikel-app/Client/src/components/ArticleForm.js",["35"],"/Users/maitrux/main-artikel-app/client/src/index.js",[],["36","37"],"/Users/maitrux/main-artikel-app/client/src/components/App.js",["38"],"import './App.css';\n\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container';\nimport ArticleForm from \"./ArticleForm\";\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport axios from 'axios'\nimport GuessArticle from './GuessArticle';\nimport { Button } from 'react-bootstrap';\n\nfunction App() {\n  const [state, setState] = useState([]);\n  const [showGuess, setShowGuess] = useState(false);\n\n  const handleGameState = (e) => {\n    var gameState = e.target.value;\n\n    if(gameState === \"search\") {\n      setShowGuess(false)\n    }\n    else if(gameState === \"guess\")\n    {\n      setShowGuess(true)\n    }\n  }\n\n  useEffect(() => {\n    axios\n      .get('/main-artikel')\n      //.get('http://localhost:9000/main-artikel')\n      .then(response => {\n        setState(response.data)\n      })\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <div className=\"game-navbar\">\n      <div className='list-icon pointer'>\n        <Button className=\"fill-yellow\" variant=\"\" value=\"search\" onClick={e => handleGameState(e, \"value\")}>Search</Button>{' '}\n        <Button className=\"fill-red\" variant=\"\" value=\"guess\" onClick={e => handleGameState(e, \"value\")}>Guess</Button>{' '}\n      </div>\n      </div>\n      <Container className='game-container'>\n        <Row>\n          <Col xs={10} md={8} className='justify-content-center'>\n            <Card>\n              <Card.Body>\n                <div className={`${showGuess ? \"\" : \"display-none\"}`}>\n                  <GuessArticle />\n                </div>\n                <div className={`${showGuess ? \"display-none\" : \"\"}`}>\n                  <ArticleForm />\n                </div>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/maitrux/main-artikel-app/client/src/components/ArticleForm.js",["39"],"import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { Button } from 'react-bootstrap';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col'\nimport { useState } from 'react';\nimport axios from 'axios'\n\nfunction ArticleForm() {\n  const [articleSingular, setArticleSingular] = useState('„Main“')\n  const [wordSingular, setWordSingular] = useState('Artikel');\n  const [wordPlurar, setWordPlurar] = useState('');\n  const [englishTranslation, setEnglishTranslation] = useState('');\n\n  const [wordFound, setWordFound] = useState(true);\n  const [translationFound, setTranslationFound] = useState(false);\n  const [disableFind, setDisableFind] = useState(true);\n\n  // Disable the \"find article\" button, if the word input is empty.\n  const handleWordInputChange = (e) => {\n   setDisableFind(e.target.value === \"\")\n  }\n\n  const findWord = (word) => {\n    axios\n    .get('/main-artikel/article', { params: { word: word }})\n    .then(response => {\n      var wordObject = response.data;\n      if(Object.keys(wordObject).length === 0) {\n        setWordFound(false);\n        setTranslationFound(false);\n      }\n      else {\n        setArticleSingular(wordObject.articleSingular);\n        setWordSingular(wordObject.wordSingular);\n        setEnglishTranslation(wordObject.englishTranslation);\n        setWordPlurar(wordObject.wordPlural);\n\n        setWordFound(true);\n        setTranslationFound(true);\n      }\n    })\n  }\n\n  const handleSubmit = (e) => { \n    e.preventDefault();\n    const inputWord = e.target.word.value\n    findWord(inputWord)\n  }\n\n  return(\n    <div>\n      <div className={`${!wordFound ? \"\" : \"display-none\"}`}>\n        <img className='something-went-wrong-img' src={require('../something_went_wrong.jpg')} />\n        <div className='error-text-bold'>Oh no!</div>\n        <div>Couldn't find the word you were looking for.</div>\n      </div>\n\n      <div className={`${wordFound ? \"\" : \"display-none\"}`}>\n        <div className='word-text'><div className='article-text'>{articleSingular}</div>{wordSingular}</div>\n        <div className={`${translationFound ? \"\" : \"display-none\"}`}>Die {wordPlurar}</div>\n        <div className={`${translationFound ? \"\" : \"display-none\"}`}>(<div className='italic inline-flex'>{englishTranslation}</div>)</div>\n      </div>\n\n      <Form id='find-article-form' onSubmit={handleSubmit}>\n        <Form.Control className='article-input' name=\"word\" placeholder=\"Enter a word\" onInput={(e) => handleWordInputChange(e)} required/>\n        <Row className='flex-row-reverse'>\n          <Col xs={12} md={5}>\n            <Button className={`margin-top-sm float-right ${disableFind ? \"disabled\" : \"\"}`} type=\"submit\">Find the article</Button>\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  );\n}\n\nexport default ArticleForm;","/Users/maitrux/main-artikel-app/client/src/components/GuessArticle.js",[],{"ruleId":"40","severity":1,"message":"41","line":15,"column":10,"nodeType":"42","messageId":"43","endLine":15,"endColumn":15},{"ruleId":"44","severity":1,"message":"45","line":54,"column":9,"nodeType":"46","endLine":54,"endColumn":98},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"40","severity":1,"message":"41","line":17,"column":10,"nodeType":"42","messageId":"43","endLine":17,"endColumn":15},{"ruleId":"44","severity":1,"message":"45","line":54,"column":9,"nodeType":"46","endLine":54,"endColumn":98},"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-global-assign","no-unsafe-negation"]